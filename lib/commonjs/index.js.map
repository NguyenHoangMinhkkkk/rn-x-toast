{"version":3,"sources":["index.ts"],"names":["_androidToastOptionsBuilder","message","duration","position","withMessage","m","withDuration","d","withPosition","p","build","_showToastIOS","toastConfig","NativeModules","Toast","Show","error","console","warn","_showToastAndroid","show","_showToast","Platform","OS","showToastTop","showToastCenter","showToastBottom"],"mappings":";;;;;;;AAAA;;AAWA,MAAMA,2BAA2B,GAAG,YAAY;AAC9C,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,QAAQ,GAAG,OAAf;AACA,MAAIC,QAAQ,GAAG,QAAf;AAEA,SAAO;AACLC,IAAAA,WAAW,EAAE,UAAUC,CAAV,EAAqB;AAChCJ,MAAAA,OAAO,GAAGI,CAAV;AACA,aAAO,IAAP;AACD,KAJI;AAKLC,IAAAA,YAAY,EAAE,UAAUC,CAAV,EAA2B;AACvCL,MAAAA,QAAQ,GAAGK,CAAX;AACA,aAAO,IAAP;AACD,KARI;AASLC,IAAAA,YAAY,EAAE,UAAUC,CAAV,EAA2B;AACvCN,MAAAA,QAAQ,GAAGM,CAAX;AACA,aAAO,IAAP;AACD,KAZI;AAaLC,IAAAA,KAAK,EAAE,YAAY;AACjB,aAAO;AAAET,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,OAAP;AACD;AAfI,GAAP;AAiBD,CAtBD;;AAwBA,MAAMQ,aAAa,GAAG,CACpBR,QAAsB,GAAG,QADL,EAEpBF,OAFoB,EAGpBC,QAAsB,GAAG,SAHL,KAIjB;AACH,QAAMU,WAA4B,GAAG;AAAEX,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAArC;;AAEA,MAAI;AACFU,+BAAcC,KAAd,CAAoBC,IAApB,CAAyBH,WAAzB;AACD,GAFD,CAEE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAa,sCAAb,EAAqDF,KAArD;AACD;AACF,CAZD;;AAcA,MAAMG,iBAAiB,GAAG,UACxBhB,QAAsB,GAAG,QADD,EAExBF,OAFwB,EAGxBC,QAAsB,GAAG,SAHD,EAIxB;AACA,MAAI;AACFW,+BAAcC,KAAd,CAAoBM,IAApB,CACEpB,2BAA2B,GACxBI,WADH,CACeH,OAAO,IAAI,WAD1B,EAEGK,YAFH,CAEgBJ,QAAQ,IAAI,SAF5B,EAGGM,YAHH,CAGgBL,QAAQ,IAAI,QAH5B,EAIGO,KAJH,EADF;AAOD,GARD,CAQE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAa,sCAAb,EAAqDF,KAArD;AACD;AACF,CAhBD;;AAkBA,MAAMK,UAAU,GAAG,CACjBlB,QAAsB,GAAG,QADR,EAEjBF,OAFiB,EAGjBC,QAAsB,GAAG,SAHR,KAId;AACH,MAAIoB,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7BJ,IAAAA,iBAAiB,CAAChB,QAAD,EAAWF,OAAX,EAAoBC,QAApB,CAAjB;AACD,GAFD,MAEO,IAAIoB,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AAChCZ,IAAAA,aAAa,CAACR,QAAD,EAAWF,OAAX,EAAoBC,QAApB,CAAb;AACD,GAFM,MAEA;AACLe,IAAAA,OAAO,CAACC,IAAR,CAAa,kDAAb;AACD;AACF,CAZD;;eAce;AACbM,EAAAA,YAAY,EAAE,CAACvB,OAAD,EAAkBC,QAAsB,GAAG,SAA3C,KACZmB,UAAU,CAAC,KAAD,EAAQpB,OAAR,EAAiBC,QAAjB,CAFC;AAGbuB,EAAAA,eAAe,EAAE,CAACxB,OAAD,EAAkBC,QAAsB,GAAG,SAA3C,KACfmB,UAAU,CAAC,QAAD,EAAWpB,OAAX,EAAoBC,QAApB,CAJC;AAKbwB,EAAAA,eAAe,EAAE,CAACzB,OAAD,EAAkBC,QAAsB,GAAG,SAA3C,KACfmB,UAAU,CAAC,QAAD,EAAWpB,OAAX,EAAoBC,QAApB;AANC,C","sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\ntype DurationType = 'LONG' | 'DEFAULT' | 'SHORT';\ntype PositionType = 'TOP' | 'CENTER' | 'BOTTOM';\n\ntype ToastConfigType = {\n  message: string;\n  duration?: DurationType;\n  position?: PositionType;\n};\n\nconst _androidToastOptionsBuilder = function () {\n  let message = '';\n  let duration = 'SHORT';\n  let position = 'CENTER';\n\n  return {\n    withMessage: function (m: string) {\n      message = m;\n      return this;\n    },\n    withDuration: function (d: DurationType) {\n      duration = d;\n      return this;\n    },\n    withPosition: function (p: PositionType) {\n      position = p;\n      return this;\n    },\n    build: function () {\n      return { message, duration, position };\n    },\n  };\n};\n\nconst _showToastIOS = (\n  position: PositionType = 'CENTER',\n  message: string,\n  duration: DurationType = 'DEFAULT'\n) => {\n  const toastConfig: ToastConfigType = { message, duration, position };\n\n  try {\n    NativeModules.Toast.Show(toastConfig);\n  } catch (error) {\n    console.warn('Something went wrong with rn-x-toast', error);\n  }\n};\n\nconst _showToastAndroid = function (\n  position: PositionType = 'CENTER',\n  message: string,\n  duration: DurationType = 'DEFAULT'\n) {\n  try {\n    NativeModules.Toast.show(\n      _androidToastOptionsBuilder()\n        .withMessage(message || 'Thông báo')\n        .withDuration(duration || 'DEFAULT')\n        .withPosition(position || 'CENTER')\n        .build()\n    );\n  } catch (error) {\n    console.warn('Something went wrong with rn-x-toast', error);\n  }\n};\n\nconst _showToast = (\n  position: PositionType = 'CENTER',\n  message: string,\n  duration: DurationType = 'DEFAULT'\n) => {\n  if (Platform.OS === 'android') {\n    _showToastAndroid(position, message, duration);\n  } else if (Platform.OS === 'ios') {\n    _showToastIOS(position, message, duration);\n  } else {\n    console.warn('Warning: This module only works on android & ios');\n  }\n};\n\nexport default {\n  showToastTop: (message: string, duration: DurationType = 'DEFAULT') =>\n    _showToast('TOP', message, duration),\n  showToastCenter: (message: string, duration: DurationType = 'DEFAULT') =>\n    _showToast('CENTER', message, duration),\n  showToastBottom: (message: string, duration: DurationType = 'DEFAULT') =>\n    _showToast('BOTTOM', message, duration),\n};\n"]}