{"version":3,"sources":["index.ts"],"names":["NativeModules","Platform","AndroidToastOptionsBuilder","message","duration","position","withMessage","m","withDuration","d","withPosition","p","build","showToastIOS","toastConfig","Toast","Show","error","console","warn","ShowToastAndroid","show","showToast","OS","showToastTop","showToastCenter","showToastBottom"],"mappings":"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","sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\ntype DurationType = 'LONG' | 'DEFAULT' | 'SHORT';\ntype PositionType = 'TOP' | 'CENTER' | 'BOTTOM';\n\ntype ToastConfigType = {\n  message: string;\n  duration?: DurationType;\n  position?: PositionType;\n};\n\nconst AndroidToastOptionsBuilder = function () {\n  let message = '';\n  let duration = 'SHORT';\n  let position = 'CENTER';\n\n  return {\n    withMessage: function (m: string) {\n      message = m;\n      return this;\n    },\n    withDuration: function (d: DurationType) {\n      if (d === 'DEFAULT') duration = 'SHORT';\n      else duration = d;\n      return this;\n    },\n    withPosition: function (p: PositionType) {\n      position = p;\n      return this;\n    },\n    build: function () {\n      return { message, duration, position };\n    },\n  };\n};\n\nconst showToastIOS = (\n  position: PositionType = 'CENTER',\n  message: string,\n  duration: DurationType = 'DEFAULT'\n) => {\n  const toastConfig: ToastConfigType = { message, duration, position };\n\n  try {\n    NativeModules.Toast.Show(toastConfig);\n  } catch (error) {\n    console.warn('Something went wrong with rn-x-toast', error);\n  }\n};\n\nconst ShowToastAndroid = function (\n  position: PositionType = 'CENTER',\n  message: string,\n  duration: DurationType = 'DEFAULT'\n) {\n  try {\n    NativeModules.Toast.show(\n      AndroidToastOptionsBuilder()\n        .withMessage(message || 'Thông báo')\n        .withDuration(duration || 'DEFAULT')\n        .withPosition(position || 'CENTER')\n        .build()\n    );\n  } catch (error) {\n    console.warn('Something went wrong with rn-x-toast', error);\n  }\n};\n\nconst showToast = (\n  position: PositionType = 'CENTER',\n  message: string,\n  duration: DurationType = 'DEFAULT'\n) => {\n  if (Platform.OS === 'android') {\n    ShowToastAndroid(position, message, duration);\n  } else if (Platform.OS === 'ios') {\n    showToastIOS(position, message, duration);\n  } else {\n    console.warn('Warning: EdToast only works on android & ios');\n  }\n};\n\nexport default {\n  showToastTop: (message: string, duration: DurationType = 'DEFAULT') =>\n    showToast('TOP', message, duration),\n  showToastCenter: (message: string, duration: DurationType = 'DEFAULT') =>\n    showToast('CENTER', message, duration),\n  showToastBottom: (message: string, duration: DurationType = 'DEFAULT') =>\n    showToast('BOTTOM', message, duration),\n};\n"]}